{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","newDate","setState","console","info","toLocaleTimeString","prevProps","name","props","debug","clearInterval","className","React","Component","App","clockName","hasClock","document","addEventListener","event","preventDefault","value","now","toString","slice","getRandomName","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpB,EAAKM,SAAS,CAAEP,KAAMM,IAGtBE,QAAQC,KAAKH,EAAQI,wBACpB,OAfP,gCAkBE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQM,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MAvBzD,kCA2BE,WACER,OAAOW,cAAcZ,KAAKD,WA5B9B,oBA+BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACIJ,IAGH,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKU,8BA5ChB,GAA2BO,IAAMC,WCK1B,IAAMC,EAAb,4MACEpB,MAAyB,CACvBqB,UAAW,UACXC,UAAU,GAHd,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKlB,SAAS,CAAEc,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKlB,SAAS,CAAEc,UAAU,OAE5BjB,OAAOC,aAAY,WACjB,IAAMe,EA3BZ,WACE,IAAMM,EAAQzB,KAAK0B,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAwBMI,GAElB,EAAKvB,SAAS,CAAEa,gBACf,QAnBP,oBAsBE,WACE,MAAgCjB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCK,GAAY,cAAC,EAAD,CAAOT,KAAMQ,WA5BlC,GAAyBH,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.d6cc08ab.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newDate = new Date();\n\n      this.setState({ date: newDate });\n\n      // eslint-disable-next-line no-console\n      console.info(newDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          { name }\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n    window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n  }\n\n  render(): React.ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}